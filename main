import pygame as pg
from main_player import Disparos, Jugador
from constantes import ALTO_VENTANA, ANCHO_VENTANA, FPS
from Plataforma import Estructura
#from vida import Vida

from enemigo import Enemigo


# Inicializar Pygame
pg.init()
screen = pg.display.set_mode((ANCHO_VENTANA, ALTO_VENTANA))
pg.display.set_caption("Mi Juego")
clock = pg.time.Clock()

# Cargar im√°genes y fondos
back_img = pg.image.load('./assets/img/background/casade.png')
back_img = pg.transform.scale(back_img, (ANCHO_VENTANA, ALTO_VENTANA))

estructura1 = Estructura(100, 200, 50, 50, r'./assets/img/Terreno/pisopiso.png')
#estructura1.cargar_imagen()

#estructura1.image = pg.image.load(estructura1.image_path).convert_alpha()

# Crear jugador
vegeta = Jugador(0, ALTO_VENTANA, frame_rate=70, speed_walk=10, speed_run=40)


cabeza = Enemigo((100, 590))

# Grupos
balas = pg.sprite.Group()
cabezas = pg.sprite.Group()

cabezas.add(cabeza)

# Bucle principal del juego
juego_ejecutandose = True
delta_ms = clock.tick(FPS)  # Calcular la diferencia de tiempo

grupo_estructuras = pg.sprite.Group()

estructura1 = Estructura(100, 200, 100, 10, r'./assets\img\Terreno\pisopisopiso.png')
estructura2 = Estructura(150, 200, 100, 10, r'./assets\img\Terreno\pisopisopiso.png')
estructura3 = Estructura(400, 200, 100, 10, r'./assets\img\Terreno\pisopisopiso.png')
estructura4 = Estructura(450, 200, 100, 10, r'./assets\img\Terreno\pisopisopiso.png')
plataforma = Estructura(0, 580, 820, 50, r'./assets\img\Terreno\pisopisopiso.png' )
#lista_estructuras = [estructura1, estructura2, estructura3, estructura4]

grupo_estructuras.add(estructura1, estructura2, estructura3, estructura4, plataforma)

# Grupo de vidas
#grupo_vidas = pg.sprite.Group()


# Crear instancia de la clase Vida
#vida_jugador = Vida(10, 10)  




estructura1.rect.y += 250
estructura2.rect.y += 250
estructura3.rect.y += 250
estructura4.rect.y += 250
estructura1.rect.x += 100
estructura2.rect.x += 100
estructura3.rect.x += 100
estructura4.rect.x += 100


juego_ejecutandose = True
while juego_ejecutandose:
    for event in pg.event.get():
        if event.type == pg.QUIT:
            juego_ejecutandose = False
        elif event.type == pg.KEYDOWN:
            if event.key == pg.K_SPACE:
                vegeta.jump()
            elif event.key == pg.K_b:
                bala_nueva = Disparos(vegeta.get_rect().centerx, vegeta.get_rect().top, vegeta.get_direction())
                balas.add(bala_nueva)
    


    #colision_bala_con_enemigo = pg.sprite.spritecollide(bala, cabezas, True)
    #for bala in colision_bala_con_enemigo:
    #     print("elimine enemigo")

    #     bala.kill()                 
    



    # Actualizar jugador y enemigos
    lista_teclas_presionadas = pg.key.get_pressed()
    if lista_teclas_presionadas[pg.K_RIGHT] and not lista_teclas_presionadas[pg.K_LEFT]:
        vegeta.walk('Right')
    elif lista_teclas_presionadas[pg.K_LEFT] and not lista_teclas_presionadas[pg.K_RIGHT]:
        vegeta.walk('Left')
    elif not lista_teclas_presionadas[pg.K_RIGHT] and not lista_teclas_presionadas[pg.K_LEFT]:
        vegeta.stay()

    if lista_teclas_presionadas[pg.K_RIGHT] and lista_teclas_presionadas[pg.K_LSHIFT] and not lista_teclas_presionadas[pg.K_LEFT]:
        vegeta.run('Right')
    elif lista_teclas_presionadas[pg.K_LEFT] and lista_teclas_presionadas[pg.K_LSHIFT] and not lista_teclas_presionadas[pg.K_RIGHT]:
        vegeta.run('Left')



    delta_ms = clock.tick(FPS)
    vegeta.update(delta_ms, grupo_estructuras)


  

    # Actualizar balas
    balas.update()

    # Dibujar fondo
    screen.blit(back_img, back_img.get_rect())

    # Dibujar estructuras
    grupo_estructuras.draw(screen)

    # Dibujar jugador y enemigos
    vegeta.draw(screen)

    # Dibujar balas
    balas.draw(screen)

    cabeza.draw(screen)

    # Dibujar el grupo de vidas
    #grupo_vidas.draw(screen)

    cabezas.update()


    # Actualizar pantalla
    pg.display.update()

# Cerrar Pygame
pg.quit()
